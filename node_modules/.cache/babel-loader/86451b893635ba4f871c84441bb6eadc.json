{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/Covid19Tracker/project1/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nfunction Chart(props) {\n  const [dailyData, setDailyData] = useState([]);\n  const {\n    data,\n    country\n  } = props;\n  useEffect(() => {\n    setDailyData(props.dailyData);\n  });\n  console.log(\"props.data from Chart\", data);\n  const lineChart = dailyData.length != 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(dailyDataItem => dailyDataItem.date),\n      //X-axis\n      datasets: [{\n        //FirstLine\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        //SecondLine\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: 'People',\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value],\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', \"rgba(255,0,0,0.5)\"]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, JSON.stringify(country) === JSON.stringify('global') ? lineChart : barChart);\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/Covid19Tracker/project1/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","axios","Line","Bar","styles","Chart","props","dailyData","setDailyData","data","country","console","log","lineChart","length","labels","map","dailyDataItem","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text","container","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAO;AAACU,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBJ,KAAzB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACRQ,IAAAA,YAAY,CAAEF,KAAK,CAACC,SAAR,CAAZ;AAEP,GAHQ,CAAT;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,IAArC;AAEA,QAAMI,SAAS,GACZN,SAAS,CAACO,MAAV,IAAoB,CAApB,gBACC,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAER,SAAS,CAACS,GAAV,CAAeC,aAAD,IAAoBA,aAAa,CAACC,IAAhD,CADN;AAC8D;AAChEC,MAAAA,QAAQ,EAAE,CAAC;AAAE;AACTV,QAAAA,IAAI,EAAEF,SAAS,CAACS,GAAV,CAAc,CAAC;AAACI,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AAAE;AACDd,QAAAA,IAAI,EAAEF,SAAS,CAACS,GAAV,CAAc,CAAC;AAACQ,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAkBO,IAnBV;AAsBF,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBACE,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFL,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADL;AAEFI,MAAAA,QAAQ,EAAC,CAAC;AACNE,QAAAA,KAAK,EAAE,QADD;AAENZ,QAAAA,IAAI,EAAC,CAACA,IAAI,CAACW,SAAL,CAAeO,KAAhB,EAAuBlB,IAAI,CAACmB,SAAL,CAAeD,KAAtC,EAA6ClB,IAAI,CAACe,MAAL,CAAYG,KAAzD,CAFC;AAGNF,QAAAA,eAAe,EAAE,CACb,mBADa,EAEb,mBAFa,EAGb,mBAHa;AAHX,OAAD;AAFP,KADV;AAcI,IAAA,OAAO,EAAE;AACLI,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBtB,OAAQ;AAAlD;AAFF,KAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAoBI,IArBR;AAuBE,sBACI;AAAK,IAAA,SAAS,EAAIN,MAAM,CAAC6B,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,IAAI,CAACC,SAAL,CAAezB,OAAf,MAA4BwB,IAAI,CAACC,SAAL,CAAe,QAAf,CAA5B,GAAuDtB,SAAvD,GAAmEa,QADvE,CADJ;AAKH;;AAED,eAAerB,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Line, Bar} from 'react-chartjs-2'\nimport styles from './Chart.module.css'\n\nfunction Chart(props) {\n    const [dailyData, setDailyData] = useState([])\n    const  {data, country} = props\n    useEffect(() => {\n            setDailyData( props.dailyData)\n\n    }, )\n\n    console.log(\"props.data from Chart\", data)\n    \n    const lineChart = (\n       dailyData.length != 0 ? \n       (<Line\n            data={{\n                labels: dailyData.map((dailyDataItem) => (dailyDataItem.date)), //X-axis\n                datasets: [{ //FirstLine\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, { //SecondLine\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }],\n\n            }}\n        />) : null\n    )\n\n  const barChart = (\n      data.confirmed? (\n        <Bar\n            data={{\n                labels:['Infected', \"Recovered\", \"Deaths\"],\n                datasets:[{\n                    label: 'People',\n                    data:[data.confirmed.value, data.recovered.value, data.deaths.value],\n                    backgroundColor: [\n                        'rgba(0,0,255,0.5)',\n                        'rgba(0,255,0,0.5)',\n                        \"rgba(255,0,0,0.5)\"\n                    ]\n\n                }]\n            }}\n            options={{\n                legend: {display: false},\n                title: {display: true, text: `Current State in ${country}`},\n            }}\n        />\n      ) : null\n  )\n    return (\n        <div className = {styles.container}>\n           {JSON.stringify(country) === JSON.stringify('global') ? lineChart : barChart}\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}