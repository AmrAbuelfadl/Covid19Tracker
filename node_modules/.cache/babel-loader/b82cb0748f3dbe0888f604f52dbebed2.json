{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/Covid19Tracker/project1/src/components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './CountryPicker.module.css';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchingCountries } from '../../api/index.js';\n\nfunction CountryPicker(props) {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    //setCountries(props.countries)\n    axios.get(`${url}/countries`).then(response => {\n      const {\n        data: {\n          countries\n        }\n      } = response;\n      const countriesResult = countries.map(country => country.name);\n      setCountries(countriesResult);\n    }).catch(error => {\n      console.log(\"Error\", error);\n    });\n    console.log(\"CountryPicker\", countries);\n  }, [countries]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: event => props.handleCountryChange(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"global\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Global\"), countries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 49\n    }\n  }, \" \", country, \" \"))));\n}\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/Covid19Tracker/project1/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","styles","NativeSelect","FormControl","fetchingCountries","CountryPicker","props","countries","setCountries","axios","get","url","then","response","data","countriesResult","map","country","name","catch","error","console","log","formControl","event","handleCountryChange","target","value","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,mBAAxC;AACA,SAAQC,iBAAR,QAAgC,oBAAhC;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV;AACAS,IAAAA,KAAK,CAACC,GAAN,CAAW,GAAEC,GAAI,YAAjB,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,YAAM;AAACC,QAAAA,IAAI,EAAC;AAACP,UAAAA;AAAD;AAAN,UAAqBM,QAA3B;AACA,YAAME,eAAe,GAAGR,SAAS,CAACS,GAAV,CAAeC,OAAD,IAAcA,OAAO,CAACC,IAApC,CAAxB;AACAV,MAAAA,YAAY,CAACO,eAAD,CAAZ;AACH,KALD,EAMCI,KAND,CAMOC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH,KARD;AASAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bf,SAA7B;AACH,GAZQ,EAYN,CAACA,SAAD,CAZM,CAAT;AAeA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAIN,MAAM,CAACsB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAG,EAA7B;AAAgC,IAAA,QAAQ,EAAKC,KAAD,IAAWlB,KAAK,CAACmB,mBAAN,CAA0BD,KAAK,CAACE,MAAN,CAAaC,KAAvC,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKpB,SAAS,CAACS,GAAV,CAAc,CAACC,OAAD,EAAUW,CAAV,kBAAiB;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAEX,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCA,OAAlC,MAA/B,CAFL,CADJ,CADJ;AAQH;;AAED,eAAeZ,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styles from './CountryPicker.module.css'\nimport {NativeSelect, FormControl} from '@material-ui/core'\nimport {fetchingCountries} from '../../api/index.js'\nfunction CountryPicker(props) {\n    const[countries, setCountries] = useState([])\n\n    useEffect(()=>{\n        //setCountries(props.countries)\n        axios.get(`${url}/countries`)\n        .then(response => {\n            const {data:{countries}} = response\n            const countriesResult = countries.map((country) => (country.name))\n            setCountries(countriesResult)\n        })\n        .catch(error => {\n            console.log(\"Error\", error)\n        })\n        console.log(\"CountryPicker\", countries)\n    }, [countries])\n    \n    \n    return (\n        <FormControl className = {styles.formControl}>\n            <NativeSelect defaultValue = \"\" onChange = {(event) => props.handleCountryChange(event.target.value)}>\n                <option value=\"global\">Global</option>\n                {countries.map((country, i) => (<option key={i} value={country}> {country} </option>))}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker\n"]},"metadata":{},"sourceType":"module"}