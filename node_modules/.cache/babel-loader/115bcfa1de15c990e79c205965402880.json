{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/Covid19Tracker/project1/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nfunction Chart(props) {\n  const [dailyData, setDailyData] = useState([]);\n  const {\n    data,\n    country\n  } = props;\n  useEffect(() => {\n    const fetch = async () => {\n      setDailyData(await props.dailyData);\n    };\n\n    fetch();\n  }, [dailyData]);\n  console.log(\"props.data from Chart\", dailyData);\n  const lineChart = dailyData.length != 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(dailyDataItem => dailyDataItem.date),\n      //X-axis\n      datasets: [{\n        //FirstLine\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        //SecondLine\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, lineChart);\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/Covid19Tracker/project1/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","axios","Line","Bar","styles","Chart","props","dailyData","setDailyData","data","country","fetch","console","log","lineChart","length","labels","map","dailyDataItem","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAO;AAACU,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBJ,KAAzB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,KAAK,GAAG,YAAW;AACrBH,MAAAA,YAAY,CAAC,MAAMF,KAAK,CAACC,SAAb,CAAZ;AACH,KAFD;;AAGAI,IAAAA,KAAK;AAER,GANQ,EAMN,CAACJ,SAAD,CANM,CAAT;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,SAArC;AAEA,QAAMO,SAAS,GACZP,SAAS,CAACQ,MAAV,IAAoB,CAApB,gBACC,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAET,SAAS,CAACU,GAAV,CAAeC,aAAD,IAAoBA,aAAa,CAACC,IAAhD,CADN;AAC8D;AAChEC,MAAAA,QAAQ,EAAE,CAAC;AAAE;AACTX,QAAAA,IAAI,EAAEF,SAAS,CAACU,GAAV,CAAc,CAAC;AAACI,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AAAE;AACDf,QAAAA,IAAI,EAAEF,SAAS,CAACU,GAAV,CAAc,CAAC;AAACQ,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAkBO,IAnBV;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAIpB,MAAM,CAACuB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,SADL,CADJ;AAKH;;AAED,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Line, Bar} from 'react-chartjs-2'\nimport styles from './Chart.module.css'\n\nfunction Chart(props) {\n    const [dailyData, setDailyData] = useState([])\n    const  {data, country} = props\n    useEffect(() => {\n        const fetch = async () =>{\n            setDailyData(await props.dailyData)\n        }\n        fetch()\n        \n    }, [dailyData])\n\n    console.log(\"props.data from Chart\", dailyData)\n    \n    const lineChart = (\n       dailyData.length != 0 ? \n       (<Line\n            data={{\n                labels: dailyData.map((dailyDataItem) => (dailyDataItem.date)), //X-axis\n                datasets: [{ //FirstLine\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, { //SecondLine\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }],\n\n            }}\n        />) : null\n    )\n\n  \n    return (\n        <div className = {styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}